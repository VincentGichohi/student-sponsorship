# Generated by Django 3.2.7 on 2021-10-27 12:11

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_sponsor', models.BooleanField(default=True)),
                ('is_student', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Sponsor',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='sponsorship.user')),
                ('sponsorName', models.CharField(max_length=200)),
                ('country', models.CharField(max_length=200)),
                ('sponsoredSchool', models.CharField(max_length=200)),
                ('type_of_sponsorship', models.CharField(choices=[('Full scholarship', 'Full scholarship'), ('Partial Sponsorship', 'Partial Sponsorship')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='sponsorship.user')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=50)),
                ('phone', models.IntegerField()),
                ('email', models.EmailField(default=None, max_length=254, unique=True)),
                ('birth_certificate', models.FileField(upload_to='images')),
                ('national_id_file', models.FileField(upload_to='images')),
                ('school_name', models.CharField(max_length=200)),
                ('school_address', models.CharField(max_length=100)),
                ('academic_level', models.TextField()),
                ('expected_year_of_completion', models.DateField(default=None)),
                ('reasons_for_sponsorship', models.TextField()),
                ('recommendation_letter', models.FileField(upload_to='images')),
            ],
        ),
        migrations.CreateModel(
            name='Applications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sponsorType', models.TextField(choices=[('Rejected', 'Rejected'), ('Pending approval', 'Pending'), ('Approved', 'Approved')], max_length=200)),
                ('sponsorId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sponsorship.sponsor')),
                ('studentId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sponsorship.student')),
            ],
        ),
    ]
